[
    "key_type: Key",
    "value_type: Key",
    "size_type: Unsigned integral type" ,
    "difference_type: Signed integer type" ,
    "key_compare: Compare",
    "value_compare: Compare",
    "allocator_type: Allocator",
    "reference: Allocator::reference value_type&" ,
    "const_reference: Allocator::const_reference const value_type&" ,
    "pointer: Allocator::pointer std::allocator_traits<Allocator>::pointer" ,
    "const_pointer: Allocator::const_pointer std::allocator_traits<Allocator>::const_pointer" ,
    "iterator: BidirectionalIterator" ,
    "Constant: bidirectional iterator" ,
    "const_iterator: Constant bidirectional iterator",
    "reverse_iterator: std::reverse_iterator<iterator>",
    "const_reverse_iterator: std::reverse_iterator<const_iterator>",
    "=: assigns values to the container",
    "get_allocator: returns the associated allocator",
    "begin: returns an iterator to the beginning",
    "cbegin: returns an iterator to the beginning",
    "end: returns an iterator to the end",
    "cend: returns an iterator to the end",
    "rbegin: returns a reverse iterator to the beginning",
    "crbegin: returns a reverse iterator to the beginning",
    "rend: returns a reverse iterator to the end",
    "crend: returns a reverse iterator to the end",
    "empty: checks whether the container is empty",
    "size: returns the number of elements",
    "max_size: returns the maximum possible number of elements",
    "clear: clears the contents",
    "insert: inserts elements",
    "emplace: constructs element in-place",
    "emplace_hint: constructs elements in-place using a hint",
    "erase: erases elements",
    "swap: swaps the contents",
    "count: returns the number of elements matching specific key",
    "find: finds element with specific key",
    "equal_range: returns range of elements matching a specific key",
    "lower_bound: returns an iterator to the first element not less than the given key",
    "upper_bound: returns an iterator to the first element greater than the given key",
    "key_comp: returns the function that compares keys",
    "value_comp: returns the function that compares keys in objects of type value_type",
    "==: lexicographically compares the values in the set",
    "!=: lexicographically compares the values in the set",
    "<: lexicographically compares the values in the set",
    "<=: lexicographically compares the values in the set",
    ">: lexicographically compares the values in the set",
    ">=: lexicographically compares the values in the set",
    "std::swap: specializes the std::swap algorithm"
]
