[
    "key_type: Key",
    "mapped_type: T",
    "value_type: std::pair<const Key, T>",
    "size_type: Unsigned integral type" ,
    "difference_type: Signed integer type" ,
    "hasher: Hash",
    "key_equal: KeyEqual",
    "allocator_type: Allocator",
    "reference: value_type&",
    "const_reference: const value_type&",
    "pointer: std::allocator_traits<Allocator>::pointer",
    "const_pointer: std::allocator_traits<Allocator>::const_pointer",
    "iterator: ForwardIterator",
    "const_iterator: Constant forward iterator",
    "local_iterator: An iterator type whose category, value, difference, pointer and",
    "reference: types are the same as iterator. This iterator can be used to iterate through a single bucket but not across buckets",
    "const_local_iterator: An iterator type whose category, value, difference, pointer and reference types are the same as const_iterator. This iterator can be used to iterate through a single bucket but not across buckets",
    "=: assigns values to the container",
    "get_allocator: returns the associated allocator",
    "begin: returns an iterator to the beginning",
    "cbegin: returns an iterator to the beginning",
    "end: returns an iterator to the end",
    "cend: returns an iterator to the end",
    "empty: checks whether the container is empty",
    "size: returns the number of elements",
    "max_size: returns the maximum possible number of elements",
    "clear: clears the contents",
    "insert: inserts elements",
    "emplace: constructs element in-place",
    "emplace_hint: constructs elements in-place using a hint",
    "erase: erases elements",
    "swap: swaps the contents",
    "count: returns the number of elements matching specific key",
    "find: finds element with specific key",
    "equal_range: returns range of elements matching a specific key",
    "begin: returns an iterator to the beginning of the specified bucket",
    "cbegin: returns an iterator to the beginning of the specified bucket",
    "end: returns an iterator to the end of the specified bucket",
    "cend: returns an iterator to the end of the specified bucket",
    "bucket_count: returns the number of buckets",
    "max_bucket_count: returns the maximum number of buckets",
    "bucket_size: returns the number of elements in specific bucket",
    "bucket: returns the bucket for specific key",
    "load_factor: returns average number of elements per bucket",
    "max_load_factor: manages maximum average number of elements per bucket",
    "rehash: reserves at least the specified number of buckets. This regenerates the hash table.",
    "reserve: reserves space for at least the specified number of elements. This regenerates the hash table.",
    "hash_function: returns function used to hash the keys",
    "key_eq: returns the function used to compare keys for equality",
    "==: compares the values in the unordered_multimap",
    "!=: compares the values in the unordered_multimap",
    "std::swap: specializes the std::swap algorithm"
]
