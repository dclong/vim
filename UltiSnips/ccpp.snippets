
priority 1
snippet "(?i)^#def(i(n(e)?)?)?" "#define ..."
#define ${1}
endsnippet

priority 1
snippet "(?i)^#ifn(d(e(f)?)?)?" "#ifndef ... #define ... #endif" rb
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:value}
#endif
endsnippet

priority 1
snippet "(?i)^#if" "#if #endif" rb
#if ${1:0}
${VISUAL}${0:${VISUAL/(.*)/(?1::code)/}}
#endif
endsnippet

priority 1
snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
	snip.rv = ('%s_%s' % (name,rand)).upper()
else:
    snip.rv = snip.c`}
#define $1

${0}

#endif /* end of include guard: $1 */

endsnippet

priority 1
snippet td "Typedef"
typedef ${1:int} ${2:MyCustomType};
endsnippet

priority 1
snippet "stru(c(t)?)?" "struct"
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`}{
	${0:/* data */}
};
endsnippet

priority 1
snippet ifdef "#ifdef" !b
#ifdef $1
    $2
#else
    $3
#endif
endsnippet

priority 1
snippet #ifdef "#ifdef" !b
#ifdef $1
    $2
#else
    $3
#endif
endsnippet

priority 1
snippet "(?i)\bf(u(n(c(t(i(o(n)?)?)?)?)?)?)?" "Function" rb
${1:void} ${2:fun_name}(${3:arg}) ${4:const}
{
	${VISUAL}${5:${VISUAL/(.*)/(?1::\/\/ code)/}}
}
endsnippet

priority 1
snippet "fun(c(t(i(o(n)?)?)?)?)? ?d(e(c(l(a(r(a(t(i(o(n)?)?)?)?)?)?)?)?)?)?" "function declaration" b
${1:void} ${2:function_name}(${3});
endsnippet

priority 1
snippet "m(a(i(n)?)?)?" "The main Function" !rb
int main(int argc, char *argv[]){
	${VISUAL}${0:${VISUAL/(.*)/(?1::\/* code *\/)/}}
	return 0;
}
endsnippet

# priority 1
# snippet for "For Loop" b
# for(${1:init}; ${2:stop}; ${3:change}){
#     $4
# }
# endsnippet

priority 1
snippet "(?i)\bfori(n(t)?)?" "for int loop" rb
for (${1:int} ${2:i} = ${3:0}; $2 < ${4:count}; ${5:++$2}) {
	${VISUAL}${6:${VISUAL/(.*)/(?1::\/* code *\/)/}}
}
endsnippet

