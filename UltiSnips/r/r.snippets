extends programming

global !p
from complete import *
endglobal

#priority 1
#snippet "\blam(b(d(a)?)?)?" "Annonymous/Lambda Function" r
#function(${1:args}){$2}
#endsnippet

priority 1
snippet "\bfun(c(t(i(o(n)?)?)?)?)?" "Define a Function" rb
${1:fun_name} = function(${2:arg}) {
	${3:}
}
endsnippet

priority 1
snippet "\bfor" "The for Loop" rb
for(${1:i} in ${2:vector}){
    $3
}
endsnippet

priority 1
snippet "\bwarn(i(n(g)?)?)?" "The warning Function for Generating a warning message" rb
warning(${1:message}${2:${3:, call.=${4:TRUE}}${5:, immediate.=${6:FALSE}}${7:, noBreaks.=${8:FALSE}}${9:, domain=${10:NULL}}})
endsnippet

priority 1
snippet "(?i)\bsd|\bstd|\bstdev|\bst(a(n(d(a(r(d)?)?)?)?)?)? ?dev(i(a(t(i(o(n)?)?)?)?)?)?" "Standard Deviation" r
sd(${1:vector}${2:, na.rm=${3:FALSE}})
endsnippet

priority 1
snippet "(?i)\bret(u(r(n)?)?)?" "return" r
return(${1:value})
endsnippet

priority 2
snippet "(?i)\bx\[x?" "x[f(x)]" r
${1:x}[$1${2}]
endsnippet

priority 2
snippet "(?i)\bx ?=? ?x\[?x\]?" "x = x[f(x)]" r
${1:x} = $1[$1${2}]
endsnippet

priority 1
snippet "(?i)^#!?r(s(c(r(i(p(t)?)?)?)?)?)?|#!" "Shabang for R" r
#!/usr/bin/env Rscript

endsnippet

priority 2
snippet "(?i)(\w+) ?= ?fun(c(t(i(o(n)?)?)?)?)?\((.*)\) ?{?" "Function Definition" rb
`!p snip.rv = match.group(1)` = function(${1:`!p snip.rv = match.group(7)`}) {
	$2
}
endsnippet

priority 1
snippet "(?i)(\w+) ?= ?fun(c(t(i(o(n)?)?)?)?)?\(?(.*)\)? ?{?" "Function Definition" rb
`!p snip.rv = match.group(1)` = function(${1:`!p snip.rv = match.group(7)`}) {
	$2
}
endsnippet

priority 1
snippet "(?i)\buniq(u(e)?)?" "unique" r
unique(x, incomparables = FALSE, ...)
endsnippet

priority 1
snippet "(?i)\btab(l(e)?)?" "table" r
table(..., exclude = if (useNA=="no") c(NA, NaN), useNA=c("no", "ifany", "always"), dnn=list.names(...), deparse.level=1)
endsnippet
