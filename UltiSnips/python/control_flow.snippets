global !p
from complete import *
endglobal

priority 1
snippet "\bcf\." "Control Flow" rb
$1`!p snip.rv = complete(t[1], file="python/control_flow.json")`
endsnippet

priority 1
snippet "\blo(o(p)?)?\." "Loop" rb
$1`!p snip.rv = complete(t[1], file="python/loop.json")`
endsnippet

priority 1
snippet "\bfor" "for loop" rb
for ${1:item} in ${2:iterable}:
	${3:pass}
#end for
endsnippet

priority 1
snippet "(?i)\bfori(n(t)?)?|fori(n(d(e(x)?)?)?)?|fore(n(u(m)?)?)?" "for i,item in ..." rb
for ${1:i},${2:item} in enumerate(${3:obj}):
	${4:pass}
#end for
endsnippet

priority 2
snippet "\bif" "If" rb
if ${1:condition}:
	${2:pass}
#end if
endsnippet

priority 1
snippet "\belif|\belseif|\bei" "Else If" rb
elif ${1:condition}:
	${2:pass}
endsnippet

priority 1
snippet "\bife(l(s(e)?)?)?" "If / Else" rb
if ${1:condition}:
	${2:pass}
else:
	${3:pass}
#end if
endsnippet

priority 2
snippet "\be(l(s(e)?)?)?" "else" rb
else:
    ${1:pass}
endsnippet


priority 1
snippet try "Try / Except" b
try:
	${1:pass}
except ${2:Exception}, ${3:e}:
	${4:raise $3}
#end try
endsnippet

priority 1
snippet try "Try / Except / Else" b
try:
	${1:pass}
except ${2:Exception}, ${3:e}:
	${4:raise $3}
else:
	${5:pass}
#end try
endsnippet

priority 1
snippet try "Try / Except / Finally" b
try:
	${1:pass}
except ${2:Exception}, ${3:e}:
	${4:raise $3}
finally:
	${5:pass}
#end try
endsnippet

priority 1
snippet try "Try / Except / Else / Finally" b
try:
	${1:pass}
except${2: ${3:Exception}, ${4:e}}:
	${5:raise}
else:
	${6:pass}
finally:
	${7:pass}
#end try
endsnippet

