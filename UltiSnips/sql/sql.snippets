global !p
from complete import *
endglobal

snippet "(?i)\bs(e(l(e(c(t)?)?)?)?)?" "Select Statement" rb
select ${1:distinct }${2:top ${3:5} }
	${4:field}
from
	${5:table_1}${6: as ${7:A}}
${8:${15:inner} join
	${9:table_2}${10: as ${11:B}}
on
	${12:condition}}
${13:where
	${14:condition}}
${16:group by
	${17:1}
${18:having
	${19:condition}}}
${20:order by
	${21:1} ${22:desc}}
;
endsnippet

snippet "(?i)\bin" "In Condition" r
in ($1)
endsnippet

snippet "(?i)\bjoin" "Join Table" rb
$1`!p snip.rv = complete(t[1], file="sql/join.json")` join
endsnippet

snippet "(?i)\bhc" "Help Column" rb
help column ${1:t}.${2:*};
endsnippet

snippet "(?i)\bcase" "Case ... End" rb
case
	when ${1:conditions_1} then 
		${2:value_1}
	${3:when ${4:conditions_2} then
		${5:value_2}}	
	${6:else
		${7:value_3}}
end
endsnippet

snippet "(?i)\bii" "insert into" rb
insert into
	${1:t}
values
	(${2:v1}, ${3:v2})
;
endsnippet

snippet '/\*|cb' "Comment Block" rb
/*
${1:* @author ${2:Ben Chuanlong Du}}
${3:* @description $4}
${5:* @param $6}
${7:* @return $8}
${9:* @summary $9}
*/
endsnippet

priority 1
snippet "(?i)\bdiff(e(r(e(n(c(e)?)?)?)?)?)?|\ba ?(/|\\|-) ?b" "A Minus B" rb
-- A Minus B: best no NULL values in A.id and B.id
select 
	$2.${8:*},
	$4.${9:*}
from 
	${1:table_1} ${2:A}
left outer join
	${3:table_2} ${4:B}
on
	$2.${5:id} = $4.${6:$5}
where
	$4.${7:$5} is NULL
;
endsnippet

priority 1
snippet "(?i)i(n(n(e(r)?)?)?)? ?j(o(i(n)?)?)?|inter(s(e(c(t(i(o(n)?)?)?)?)?)?)?|\ba ?( and |&|&&) ?b" "A Inner Join B" rb
-- A Inner Join B
select 
	$2.${7:*},
	$4.${8:*}
from 
	${1:table_1} ${2:A}
inner join
	${3:table_2} ${4:B}
on
	$2.${5:id} = $4.${6:$5}
;
endsnippet

priority 1
snippet "(?i)\bs(y(m(m(e(t(r(i(c)?)?)?)?)?)?)?)? ?diff(e(r(e(n(c(e)?)?)?)?)?)?|\ba ?(sd|^) ?b" "Symmetric Difference of A and B" rb
-- Symmetric Difference of A and B: best no NULL values in A.id and B.id
select 
	$2.${9:*},
	$4.${10:*}
from 
	${1:table_1} ${2:A}
full outer join
	${3:table_2} ${4:B}
on
	$2.${5:id} = $4.${6:$5}
where
	$2.${7:$5} is NULL or $4.${8:$5} is NULL
;
endsnippet
