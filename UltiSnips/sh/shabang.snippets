global !p
# Tests for the existence of a variable declared by Vim's filetype detection
# suggesting the type of shell script of the current file
def testShell(scope, shell):
    return vim.eval("exists('" + scope + ":is_" + shell + "')")
#end def

# Loops over the possible variables, checking for global variables
# first since they indicate an override by the user.
def getShell():
    for scope in ["g", "b"]:
        for shell in ["bash", "posix", "sh", "kornshell"]:
            if testShell(scope, shell) == "1":
                if shell == "kornshell":
                    return "ksh"
                if shell == "posix":
                    return "sh"
                return shell
    return "sh"
#end def
endglobal

priority 1
snippet "(?i)^#!?(e(n(v)?)?)?" "Shabang for Shell" r
`!p snip.rv = '#!/usr/bin/env ' + getShell() + "\n\n" `
endsnippet

priority 1
snippet "(?i)^#!?b(a(s(h)?)?)?" "Shabang for Bash" r
#!/usr/bin/env bash
endsnippet

priority 1
snippet $ "$()" 
$(${1:command})
endsnippet

priority 1
snippet "(?i)\band" "The AND operator" r
&&
endsnippet

priority 1
snippet "(?i)\bor" "The OR operator" r
||
endsnippet

priority 1
snippet "(?i)\bnot" "The NOT operator" r
!
endsnippet
