
global !p
from complete import *
endglobal

snippet "(?i)\bidentity matrix|\beye|\bdiag" "Identity Matrix" r
i(${1:dim})
endsnippet

snippet "(?i)\bmatrix|\bj" "Fill a Matrix" r
j(${1:nrow}${2:, ${3:ncol}${4:, ${5:1}}})
endsnippet

snippet "(?i)\bwhich|\bloc" "The LOC Function" r
loc(${1:values})
endsnippet

snippet "(?i)\brep(e(a(t)?)?)?" "Repeat a Matrix" r
repeat(${1:matrix}, ${2:nrow}, ${3:ncol})
endsnippet

priority 1
snippet "(?i)\bmatrix reduction\.|matred\.|red(u(c(t(i(o(n)?)?)?)?)?)?\." "Matrix Reduction" rb
MatrixReduction.$1`!p snip.rv = complete(t[1], file="sas/matrix_reduction.json")`
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.addition(.| )row|row sums?|sums? of rows?|rowSums?" "Sum of Rows" r
${1:matrix}[, +]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.addition(.| )row|row sums?|sums? of rows?|rowSums?\((\w)\)" "Sum of Rows" r
${1:`!p snip.rv = match.group(1)`}[, +]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.addition(.| )col(umn)?|col(umn) sums?|sums? of col(umn)?s?|colSums?" "Sum of Columns" r
${1:matrix}[+, ]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.addition(.| )col(umn)?|col(umn) sums?|sums? of col(umn)?s?|colSums?\((\w)\)" "Sum of Columns" r
${1:`!p snip.rv = match.group(1)`}[+, ]
endsnippet

snippet "(?i)\bMatrixReduction\.multiplication(.| )rows?|prod(uct)?s? of rows?|row prod(uct)?s?|rowProds?" "Product of Rows" r
${1:matrix}[, #]
endsnippet

snippet "(?i)\bMatrixReduction\.multiplication(.| )col(umn)?s?|prod(uct)?s? of col(umn)?s?|col(umn)?s? prod(uct)?s?|colProds?" "Product of Columns" r
${1:matrix}[#, ]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.maximum(.| )rows?|max(imum)?s? of rows?|row max(imum)?s?|rowMaxs?" "Maximums of Rows" r
${1:matrix}[, <>]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.maximum(.| )col(umn)?s?|max(imum)?s? of col(umn)?s?|col(umn)? max(imum)?s?|colMaxs?" "Maximums of Columns" r
${1:matrix}[<>, ]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.minimum(.| )rows?|min(imum)?s? of rows?|row min(imum)?s?|rowMins?" "Minimums of Rows" r
${1:matrix}[, ><]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.minimum(.| )col(umn)?s?|min(imum)?s? of col(umn)?s?|col(umn)?s? min(imum)?s?|colMins?" "Minimums of Columns" r
${1:matrix}[><, ]
endsnippet

priority 2
snippet "(?i)\bMatrixReduction\.index of maximum(.| )rows?|indexs? of maximums? of rows?|rows? indexs? max(imum)?s?|rowMaxInd(ex)?" "Indices of Maximums of Rows" r
${1:matrix}[, <:>]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.colMaxInd(ex)?" "Indices of Maximums of Columns" r
${1:matrix}[<:>, ]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.rowMinInd(ex)?" "Indices of Minimum of Rows" r
${1:matrix}[, >:<]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.colMinInd(ex)?" "Indices of Minimum of Columns" r
${1:matrix}[>:<, ]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.rowMeans?" "Means of Rows" r
${1:matrix}[, :]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.colMeans?" "Means of Columns" r
${1:matrix}[:, ]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.rowSS" "Sums of Squares of Rows" r
${1:matrix}[, ##]
endsnippet

priority 1
snippet "(?i)\bMatrixReduction\.sums of squares of |colSS" "Sums of Squares of Columns" r
${1:matrix}[##, ]
endsnippet

priority 2
snippet "(?i)cbind" "R-style cbind Function" r
insert(${1:x}, ${2:y}, 0, ncol($1)+1)
endsnippet

priority 1
snippet "(?i)cbind\((\w), ?(\w)\)" "R-style cbind Function" r
insert(${1:`!p snip.rv = match.group(1)`}, ${2:`!p snip.rv = match.group(2)`}, 0, ncol($1)+1)
endsnippet

priority 2
snippet "(?i)rbind" "R-style rbind Function" r
insert(${1:x}, ${2:y}, nrow($1)+1, 0)
endsnippet

priority 1
snippet "(?i)rbind\((\w), ?(\w)\)" "R-style rbind Function" r
insert(${1:`!p snip.rv = match.group(1)`}, ${2:`!p snip.rv = match.group(2)`}, nrow($1)+1, 0)
endsnippet

priority 2
snippet "(?i)\bstart" "Define a Module in IML" rb
start ${1:fun_name}(${2:arg});
	${3:/* code */}
finish;
endsnippet


priority 2
snippet "(?i)\bcdf" "CDF of Distributions" r
cdf('$1`!p snip.rv = complete(t[1], file="sas/distributions.json")`', ${2:quantile}, ${3:args})
endsnippet

priority 3
snippet "(?i)\blogCDF" "Logarithm of CDF of Distributions" r
logcdf('$1`!p snip.rv = complete(t[1], file="sas/distributions.json")`', ${2:quantile}, ${3:args})
endsnippet

priority 2
snippet "(?i)\bpdf" "PDF of Distributions" r
pdf('$1`!p snip.rv = complete(t[1], file="sas/distributions.json")`', ${2:quantile}, ${3:args})
endsnippet

priority 1
snippet "(?i)\bquantile" "Quantile of Distributions/Inverse CDFs" r
quantile('$1`!p snip.rv = complete(t[1], file="sas/distributions.json")`', ${2:probability}, ${3:args})
endsnippet

priority 1
snippet "(?i)\brand" "Generate Random Numbers" r
rand('$1`!p snip.rv = complete(t[1], file="sas/distributions.json")`', ${2:args})
endsnippet

priority 1
snippet "(?i)\bpnorm" "CDF of the Normal Distribution" r
cdf('NORMAL', ${1:quantile}, ${2:mean}, ${3:standard_deviation})
endsnippet

priority 1
snippet "(?i)\bdnorm" "PDF of the Normal Distribution" r
pdf('NORMAL', ${1:quantile}, ${2:mean}, ${3:standard_deviation})
endsnippet

priority 1
snippet "(?i)\bqnorm" "Quantile of the Normal Distribution" r
quantile('NORMAL', ${1:probability}, ${2:mean}, ${3:standard_deviation})
endsnippet

priority 1
snippet "(?i)\brnorm" "Generate a Random Number from the Normal Distribution" r
rand('NORMAL', ${2:mean}, ${3:standard_deviation})
endsnippet

priority 1
snippet "(?i)\bpbern" "CDF of the Bernoulli Distribution" r
cdf('BERNOULLI', ${1:quantile}, ${2:success_probability})
endsnippet

priority 1
snippet "(?i)\bdbern" "PDF of the Bernoulli Distribution" r
pdf('BERNOULLI', ${1:quantile}, ${2:success_probability})
endsnippet

priority 1
snippet "(?i)\bqbern" "Quantile of the Bernoulli Distribution" r
quantile('BERNOULLI', ${1:probability}, ${2:success_probability})
endsnippet

priority 1
snippet "(?i)\brbern" "Generate a Random Number from the Bernoulli Distribution" r
rand('BERNOULLI', ${2:success_probability})
endsnippet

priority 1
snippet "(?i)\bpbeta" "CDF of the Beta Distribution" r
cdf('BETA', ${1:quantile}, ${2:alpha}, ${3:beta})
endsnippet

priority 1
snippet "(?i)\bdbeta" "PDF of the Beta Distribution" r
pdf('BETA', ${1:quantile}, ${2:alpha}, ${3:beta})
endsnippet

priority 1
snippet "(?i)\bqbeta" "Quantile of the Beta Distribution" r
quantile('BETA', ${1:probability}, ${2:alpha}, ${3:beta})
endsnippet

priority 1
snippet "(?i)\brbeta" "Generate a Random Number from the Beta Distribution" r
rand('BETA', ${2:alpha}, ${3:beta})
endsnippet

priority 1
snippet "(?i)\bpbinom" "CDF of the Binomial Distribution" r
cdf('BINOMIAL', ${1:quantile}, ${2:success_probability}, ${3:size})
endsnippet

priority 1
snippet "(?i)\bdbinom" "PDF of the Binomial Distribution" r
pdf('BINOMIAL', ${1:quantile}, ${2:success_probability}, ${3:size})
endsnippet

priority 1
snippet "(?i)\bqbinom" "Quantile of the Binomial Distribution" r
quantile('BINOMIAL', ${1:probability}, ${2:success_probability}, ${3:size})
endsnippet

priority 1
snippet "(?i)\brbinom" "Generate a Random Number from the Binomial Distribution" r
rand('BINOMIAL', ${2:p}, ${3:size})
endsnippet

priority 1
snippet "(?i)\bpchisq" "CDF of the Chi-Square Distribution" r
cdf('CHISQUARE', ${1:quantile}, ${2:degree_freedom}, ${3:non-centrality})
endsnippet

priority 1
snippet "(?i)\bdchisq" "PDF of the Chi-Square Distribution" r
pdf('CHISQUARE', ${1:quantile}, ${2:degree_freedom}, ${3:non-centrality})
endsnippet

priority 1
snippet "(?i)\bqchisq" "Quantile of the Chi-Square Distribution" r
quantile('CHISQUARE', ${1:probability}, ${2:degree_freedom}, ${3:non-centrality})
endsnippet

priority 1
snippet "(?i)\brchisq" "Generate a Random Number from the Chi-Square Distribution" r
rand('CHISQUARE', ${2:degree_freedom}, ${3:non-centrality})
endsnippet

priority 1
snippet "(?i)\bpf" "CDF of the F Distribution" r
cdf('F', ${1:quantile}, ${2:numerator_degree_freedom}, ${3:denominator_degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bdf" "PDF of the F Distribution" r
pdf('F', ${1:quantile}, ${2:numerator_degree_freedom}, ${3:denominator_degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bqf" "Quantile of the F Distribution" r
quantile('F', ${1:probability}, ${2:numerator_degree_freedom}, ${3:denominator_degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\brf" "Generate a Random Number from the F Distribution" r
rand('F', ${2:numerator_degree_freedom}, ${3:denominator_degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bpt" "CDF of the T Distribution" r
cdf('T', ${1:quantile}, ${2:degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bdt" "PDF of the T Distribution" r
pdf('T', ${1:quantile}, ${2:degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bqt" "Quantile of the T Distribution" r
quantile('T', ${1:probability}, ${2:degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\brt" "Generate a Random Number from the T Distribution" r
rand('T', ${2:degree_freedom}, ${4:non-centrality})
endsnippet

priority 1
snippet "(?i)\bread" "Read Data Set into IML" r
use ${1:DataSet};
read all var _all_ into ${2:VarName};
close $1;
endsnippet

priority 1
snippet "(?i)\bdiff?" "The dif<n> Function" r
dif${2:1}(${1:vector})
endsnippet

priority 1
snippet "(?i)\bdiff?" "The lag<n> Function" r
lag${2:1}(${1:vector})
endsnippet

priority 1
snippet "(?i)\bpow(e(r)?)?" "Elementwise Power" r
${1:base} ## ${2:power}
endsnippet

priority 1
snippet "(?i)\bmpow(e(r)?)?" "Matrix Power" r
${1:base_matrix} ** ${2:power}
endsnippet

priority 1
snippet "(?i)\bmax" "Maximum Value of Matrices" r
max(${1:m1}, ${2:m2})
endsnippet

priority 1
snippet "(?i)\bmin" "Minimum Value of Matrices" r
min(${1:m1}, ${2:m2})
endsnippet

priority 1
snippet "(?i)\breturn" "Return a Value" rb
return(${1:value});
endsnippet

priority 1
snippet "(?i)\bcho(o(s(e)?)?)?|\bife(l(s(e)?)?)?" "Conditional Element Selection" r
choose(${1:condition}, ${2:result-for-true}, ${3:result-for-false})
endsnippet

