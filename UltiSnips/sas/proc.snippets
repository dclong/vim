global !p
from complete import *
endglobal

# procedure snippets

priority 1
snippet "p(r(o(c)?)?)?" "Procedure" rb
proc $1`!p snip.rv = complete(t[1], file="sas/proc.json")`
endsnippet

priority 1
snippet "proc fcmp" "The FCMP Procedure" b
proc fcmp outlib = ${1:lib}.${2:funcs}.${3:category};
    $4
run;
endsnippet

priority 1
snippet "proc sort" "The SORT Procedure" b
proc sort ${1:data=data_set_name} ${2:out=${3:$1}};
    by ${1:column_name};
run;
endsnippet

priority 1
snippet "proc print" "The Print Procedure" b
title "${7:$1}";
proc print data = ${1:d} ${2:(${3:where=(${4:condition})} ${5:obs=${6:5}})};
run;
title;
endsnippet

priority 1
snippet 'pp(\d+)' "Print Top n Rows" rb
title "${4:$1}";
proc print data = ${1:d} ${2:(obs=${3:`!p snip.rv = match.group(1)`})};
run;
title;
endsnippet

priority 1
snippet ppw "Print with Where" b
title "${4:$1}";
proc print data = ${1:d} ${2:(where=(${3:conditions}))};
run;
title;
endsnippet

priority 1
snippet sort "Proc Sort" b
title "${4:$1 Sorted}";
proc sort data = ${1:d} ${2:out = ${3:o}};
	by ${5:descending} ${6:var};
run;
title;
endsnippet

# depends on whether dlm, use delimiter or not ...
# also make the dataRow 2 if getNames=Y
priority 2
snippet "proc import" "The IMPORT Procedure" rb
proc import out=${1:dataset} ${11:(where=(${12:conditions}))}
    dataFile="${2:file_path}"
    dbms=$3`!p snip.rv = complete(t[3], opts=["csv", "dlm", "xlsx"])`
    ${4:replace}
    ; 
    delimiter="\t";
    ${5:sheet="${6:sheet_name}";}
    ${7:getNames=${8:Y};}
    ${9:dataRow=${10:1};}
run;
endsnippet

priority 1
snippet "proc export" "The EXPORT Procedure" rb
proc export data=${1:dataset} ${2:(where=(${3:conditions}))}
    outfile="${4:file_path}"
    dbms=$5`!p snip.rv = complete(t[5], opts=["csv", "dlm", "xlsx"])`
    replace;
run;
endsnippet

priority 1
snippet "proc transpose" "The TRANSPOSE Procedure" rb
proc transpose data=${1:in_dataset}${2: out=${3:out_dataset}${4: (drop=${5:_name_})}}${6: prefix=${7:prefix}};
    by ${8:group_column};
    ${9:id ${10:nest_column}};
    var ${11:columns};
run;
endsnippet

priority 1
snippet "proc append" "The APPEND Procedure" rb
proc append base=${1:base_dataset}
    data=${2:dataset_to_append}
    ${3:force}
    ;
run;
endsnippet

priority 1
snippet "proc datasets" "The DATASETS Procedure" rb
proc datasets ${1:library=${2:library}}${3: noList};${4:
    delete ${5:datasets_no_lib_prefix};}${6:
    copy from=${7:src_lib} to=${8:des_lib};${9:
    select ${10:datasets_no_lib_prefix};}}
quit;
endsnippet




